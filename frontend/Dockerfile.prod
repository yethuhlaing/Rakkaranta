# Stage 1: Building the code
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package.json and package-lock.json
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the code
COPY . .

# Generate Prisma client - specify the schema path if it's at root level
RUN npx prisma generate

# Build the app with explicit production flag
RUN NODE_ENV=production npm run build

# Stage 2: Run the built app
FROM node:18-alpine AS runner

WORKDIR /app

# Set environment variables explicitly
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Copy the entire node_modules directory to ensure all dependencies are available
COPY --from=builder /app/node_modules ./node_modules

# Copy the schema.prisma file from root level
COPY --from=builder /app/prisma/schema.prisma ./prisma/schema.prisma

# Copy package.json and package-lock.json
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/package-lock.json ./package-lock.json 


# Copy Next.js build output
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static
COPY --from=builder /app/public ./public

# Expose the port
EXPOSE 3000

# Start the app using the standalone server
CMD ["node", "server.js"]