# nginx/conf.d/site.conf
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# Security headers
map $sent_http_content_type $policy_token {
    "text/html"                     "script-src 'self' 'unsafe-inline' 'unsafe-eval' https: data:; object-src 'self'; base-uri 'self';";
    "application/json"              "default-src 'none'; script-src 'none';";
    default                         "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:;";
}
# Redirect HTTP to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name senseiq.northeurope.cloudapp.azure.com;

   # Certbot challenges
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
        # return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name senseiq.northeurope.cloudapp.azure.com;

    # SSL
    ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy $policy_token always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Root directory and index files
    root /var/www/frontend;
    index index.html;
    
    # All routes, including API routes
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;

        # Rate limiting
        limit_req zone=one burst=10 nodelay;
        limit_conn addr 10;

        # Security headers
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;

        # Logs
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    location /api/realtime/sensors {
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;


        # # Rate limiting for API
        # limit_req zone=one burst=5 nodelay;
        # limit_conn addr 10;

        # # Security
        # proxy_hide_header X-Powered-By;
        # proxy_hide_header Server;

        # # Timeouts
        # proxy_connect_timeout 60s;
        # proxy_send_timeout 60s;
        # proxy_read_timeout 60s;
    }

    # Static file caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|txt|woff|woff2|ttf|eot)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Additional security
    location ~ /\.(?!well-known) {
        deny all;
    }
}

